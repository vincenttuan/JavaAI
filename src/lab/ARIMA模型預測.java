package lab;

import com.github.signaflo.timeseries.TimeSeries;
import com.github.signaflo.timeseries.model.arima.Arima;
import com.github.signaflo.timeseries.model.arima.ArimaOrder;

/**
 * ARIMA
 * AR: 自迴歸, I: 差分, MA: 移動平均
 * ARIMA模型（全稱為「自迴歸整合移動平均模型」，Autoregressive Integrated Moving Average Model）
 * 是預測時間序列數據的一種常用統計模型。它結合了自迴歸（AR）、差分整合（I）和移動平均（MA）三種方法，
 * 以處理各種不同類型的時間序列數據，尤其是那些具有趨勢和季節性的數據。

 * ARIMA模型的三個主要組件：
 * 自迴歸（AR）：
 * 自迴歸部分反映了當前數據點與其過去值之間的關係。它假設當前觀察值可以用過去若干期的觀察值的線性組合來進行預測。模型中的p代表自迴歸項的數量。

 * 差分整合（I）：
 * 差分是為了使非穩定時間序列變得穩定，通過計算連續觀察值之間的差異來去除序列的趨勢或季節性。d代表進行差分的次數。

 * 移動平均（MA）：
 * 移動平均部分關注了時間序列與過去預測誤差之間的關係。這一部分的目的是捕捉時間序列中的隨機波動。模型中的q代表移動平均項的數量。

 * ARIMA模型的特點：
 * 1. 能夠模擬和預測具有時間依賴性的數據。
 * 2. 適用於非季節性和季節性的時間序列預測。
 * 3. 通過差分轉換，可以處理非穩定數據。
 * 4. 需要對時間序列進行仔細的分析和參數選擇。
 * 
 * 應用：
 * ARIMA模型廣泛應用於經濟數據、自然現象、股票市場等時間序列的預測中。
 
 * 在股票市場中，ARIMA模型可以用來預測未來某支股票的價格。讓我們通過一個例子來簡單介紹自迴歸（AR）、差分（I）和移動平均（MA）這三個概念：
 * 想象您正在觀察一家公司的股票價格，希望能夠預測明天的股價。
 * 
 * 自迴歸（AR）:
 * 自迴歸部分的想法是，今天的股價與過去幾天的股價有關。
 * 如果我們選擇了p=3的自迴歸階數，那麼今天的股價可以看作是過去三天股價的一種加權組合。
 * 這種加權反映了過去股價對當前股價的影響力度。舉個例子，如果過去幾天股價呈現上升趨勢，我們可能會預測今天的股價會繼續上升。

 * 差分（I）:
 * 差分是為了讓非穩定的時間序列數據變得穩定。
 * 在股市中，股價往往會受到很多因素的影響，例如市場情緒、公司新聞或經濟事件，這些都可能導致股價顯示出某種趨勢或季節性模式。
 * 通過差分（也就是連續計算股價的日漲跌幅度），我們可以消除這些趨勢，讓模型專注於股價的波動本身，而不是其絕對值。

 * 移動平均（MA）:
 * 移動平均部分則是關注那些無法被模型通過趨勢解釋的隨機變化，也就是市場的“噪音”。
 * 例如，某家公司因為意外事件而導致的股價短期內的異常波動。
 * 通過加入q=2的移動平均階數，模型會考慮到過去兩天的隨機震盪，並用這些資訊來幫助平滑預測。

 * 選擇ARIMA模型的參數（p,d,q）時，p代表模型中自迴歸項的數量，d代表進行差分的次數，以使時間序列數據穩定，q代表模型中移動平均項的數量。
 * 在實際應用中，這些參數需要通過觀察數據本身的特性或進行統計測試來確定。

 * 在股市分析的實際應用中，您需要試驗不同的參數組合，並使用如赤池資訊量準則（AIC）等標準來評估模型的好壞，以選擇最合適的ARIMA模型來進行預測。
 * 這個過程稱為模型的“訓練”，一旦模型被“訓練”好，就可以用來預測未來的股價走勢。
 * 
 * --------------------------------------------------------------------------------------------------------------
 * 
 * ArimaOrder.order(1, 1, 1)：
 * p=1：這表示我們假設股價與其前一天的價格存在線性關係。今天的股價部分由昨天的股價加上某個固定的加權值決定。
 * d=1：這表示我們對數據進行一次差分，以消除可能存在的趨勢性，使序列變得穩定。
 *      在股價的例子中，這通常是將每一天的股價與前一天的股價相減，得到股價變動的數據，即日收益率。
 * q=1：這表示模型包含一個移動平均項，意味著今天的誤差（即實際價格與模型預測價格之間的差異）受到前一天誤差的影響。
 *
 * 總而言之，選擇不同的 d 值反映了對數據穩定性的不同假設。
 * d=1 通常用於處理有趨勢的數據，而 d=2 用於處理更複雜的非穩定時間序列。
 * 选择 p 和 q 的值則是基於對數據自相關性質的理解，以及嘗試擬合數據中觀察到的模式。
 * 在實際應用中，往往需要嘗試多種模型配置，並使用統計測試來決定
 * 
 * --------------------------------------------------------------------------------------------------------------
 * 
 * ArimaOrder.order(2, 2, 3)：
 * p=2：這表示當前股價不僅與前一天的股價有關，還與前兩天的股價相關。換句話說，股價的今天值被認為是前兩天股價的加權函數。
 *      這可能表明市場的記憶效應較長，投資者在做出買賣決策時會考慮到前兩天的價格信息。
 * d=2：這表示對原始股價序列進行了兩次差分，以期使序列達到平穩狀態。
 *      在股價的例子中，一次差分通常是計算日收益率，而二次差分可能是因為數據中存在加速上升或下降的趨勢，或者存在更為複雜的非線性趨勢。
 *      二次差分有助於移除這些複雜趨勢，使模型能夠更好地捕捉價格波動中的模式。
 * q=3：三個移動平均項意味著模型會考慮前三天的隨機震盪或噪音對今天股價的影響。
 *      這反映出股價不僅受到過去幾天趨勢的影響，也受到近期市場隨機波動的影響。
 *      這可以是由於市場的快速反應，如對於突發新聞或事件的短期反應。
 * 
 * 總結來說，ArimaOrder.order(2, 2, 3) 的設置表明你認為股價的當前值與前兩天的值有較強的相關性，
 * 股價序列包含複雜的趨勢需要通過二次差分來消除，並且近期的隨機誤差或震盪在短期內對股價有較大的影響。
 * 這樣的模型可能適用於那些波動較大，趨勢變化較為複雜的股票價格序列。然而，這樣的模型需要謹慎選擇，以避免過度擬合和失去解釋力。
 * 通常，對於實際的股價預測，我們會根據數據的特性、時間序列診斷以及模型選擇準則來確定合適的模型階數。
 
 * */
public class ARIMA模型預測 {

    public static void main(String[] args) throws Exception {
    	String symbol = "0050";
        // 使用 GetPrice 類獲取過去 30 天的收盤價格
        double[] prices = Utils.getClosingPrice(symbol);

        // 將股票價格數據轉換為時間序列對象
        TimeSeries series = TimeSeries.from(prices);

        // 定義ARIMA模型的階數(p, d, q)，這裡需要根據數據進行調整
        // ArimaOrder.order(p, d, q)中的p、d和q分別是ARIMA模型的自迴歸階數、差分階數和移動平均階數。
        // 這些參數需要根據您的具體數據進行調整，可能需要通過多次嘗試和模型診斷來確定最佳值。
        ArimaOrder order = ArimaOrder.order(5, 1, 1);

        // 擬合ARIMA模型
        Arima model = Arima.model(series, order);

        // 預測下一個值（明日股價）
        double predictedPrice = model.forecast(1).pointEstimates().at(0);

        System.out.println("預測下一個值（明日股價）: " + predictedPrice);
        
        // 繪圖:
        Utils.drawLineChart(symbol, prices, predictedPrice);
        
    }
}
